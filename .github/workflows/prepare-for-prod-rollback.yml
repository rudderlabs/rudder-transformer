name: Prepare for Rollback in Production Environment

on:
  workflow_dispatch:

jobs:
  create-rollback-pr:
    name: Update Helm Charts For Production and Create Pull Request
    runs-on: ubuntu-latest

    # Only allow to be deployed from tags and main branch
    # Only allow specific actors to trigger
    if: (startsWith(github.ref, 'refs/tags/') || startsWith(github.ref, 'refs/heads/main')) && (github.actor == 'ItsSudip' || github.actor == 'krishna2020' || github.actor == 'saikumarrs'  || github.actor == 'chandumlg') && (github.triggering_actor == 'ItsSudip' || github.triggering_actor == 'krishna2020' || github.triggering_actor == 'saikumarrs' || github.triggering_actor == 'chandumlg')

    steps:
      - name: Get Target Version
        id: target-version
        run: |
          version=${{ github.ref_name }}
          echo "tag_name=$version" >> $GITHUB_OUTPUT
          echo "Target Version: $tag_name"

      # In order to make a commit, we need to initialize a user.
      # You may choose to write something less generic here if you want, it doesn't matter functionality wise.
      - name: Initialize Mandatory Git Config
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "noreply@github.com"

      - name: Clone Devops Repo
        run: |
          git clone https://${{secrets.PAT}}@github.com/rudderlabs/rudder-devops.git

      - name: Update Helm Charts and Raise Pull Request
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
        run: |
          cd rudder-devops
          git checkout -b shared-transformer-rollback-${{ steps.target-version.outputs.tag_name }}

          cd helm-charts/shared-services/per-az
          yq eval -i ".rudder-transformer.image.tag=\"${{ steps.target-version.outputs.tag_name }}\"" values.blue-release.yaml
          yq eval -i ".user-transformer.image.tag=\"${{ steps.target-version.outputs.tag_name }}\"" values.blue-release.yaml
          git add values.blue-release.yaml

          yq eval -i ".rudder-transformer.image.tag=\"${{ steps.target-version.outputs.tag_name }}\"" values.enterprise.yaml
          yq eval -i ".user-transformer.image.tag=\"${{ steps.target-version.outputs.tag_name }}\"" values.enterprise.yaml
          git add values.enterprise.yaml

          yq eval -i ".rudder-transformer.image.tag=\"${{ steps.target-version.outputs.tag_name }}\"" values.multi-tenant.yaml
          yq eval -i ".user-transformer.image.tag=\"${{ steps.target-version.outputs.tag_name }}\"" values.multi-tenant.yaml
          git add values.multi-tenant.yaml

          cd ../../config-be-rudder-transformer
          yq eval -i ".config-be-rudder-transformer.image.tag=\"${{ steps.target-version.outputs.tag_name }}\"" values.prod.yaml
          yq eval -i ".config-be-user-transformer.image.tag=\"${{ steps.target-version.outputs.tag_name }}\"" values.prod.yaml
          git add values.prod.yaml

          git commit -m "chore: rollback shared transformers to ${{ steps.target-version.outputs.tag_name }}"
          git push -u origin shared-transformer-rollback-${{ steps.target-version.outputs.tag_name }}

          gh pr create --fill

      - name: Update helm charts and raise pull request for enterprise customers on dedicated transformers
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
        run: |
          cd rudder-devops
          git checkout -b dedicated-transformer-rollback-${{ steps.target-version.outputs.tag_name }}

          cd customer-objects

          declare -a enabled_ut_customers=()
          declare -a sub_directories=('enterprise-us' 'enterprise-eu')

          # identify the customers enabled in sub-directories
          for directory in "${sub_directories[@]}"; do
            for f in "./$directory"/*; do
              [[ -f $f ]] || continue

              enabled="$(yq e '.spec.user_transformer.enabled' $f)"
              if [ $enabled == "true" ]; then
                  enabled_ut_customers+=( $f )
              fi
            done
          done

          # bump up the customers version and repository information
          for customer in "${enabled_ut_customers[@]}"; do
            yq eval -i ".spec.user_transformer.image.version=\"${{ steps.target-version.outputs.tag_name }}\"" $customer
            git add $customer
          done

          git commit -m "chore: rollback dedicated transformers to ${{ steps.target-version.outputs.tag_name }}"
          git push -u origin dedicated-transformer-rollback-${{ steps.target-version.outputs.tag_name }}

          gh pr create --fill
