name: 'K8s Deployment Restart'
description: 'Rollout restart a deployment on a k8s cluster across multiple namespaces'

inputs:
  aws-role:
    required: true
    description: 'AWS IAM role to assume for EKS access'
  aws-region:
    required: true
    description: 'AWS region where the EKS cluster is located'
  k8s-cluster:
    required: true
    description: 'Name of the EKS cluster'
  k8s-namespace:
    required: true
    description: 'Kubernetes namespace(s) - single namespace or comma-separated list (e.g., "namespace1" or "namespace1,namespace2,namespace3")'
  deployment-name:
    required: true
    description: 'Name of the deployment to restart'

runs:
  using: 'composite'
  steps:
    - uses: azure/setup-kubectl@v4

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ inputs.aws-role }}
        role-session-name: GitHubActionsEKS
        aws-region: ${{ inputs.aws-region }}

    - name: Update Kubeconfig
      shell: bash
      run: aws eks update-kubeconfig --name ${{ inputs.k8s-cluster }} --region ${{ inputs.aws-region }}

    - name: Restart Pods in the provided Namespaces
      shell: bash
      run: |
        # Split comma-separated namespaces and restart deployment in each
        IFS=',' read -ra NAMESPACES <<< "${{ inputs.k8s-namespace }}"
        IFS=',' read -ra DEPLOYMENTS <<< "${{ inputs.deployment-name }}"

        echo "🚀 Starting deployment restart process..."
        echo "Deployment: ${{ inputs.deployment-name }}"
        echo "Namespaces: ${{ inputs.k8s-namespace }}"
        echo ""

        for namespace in "${NAMESPACES[@]}"; do
          # Trim whitespace from namespace name
          namespace=$(echo "$namespace" | xargs)
          
          if [ -z "$namespace" ]; then
            echo "⚠️  Skipping empty namespace"
            continue
          fi
          
          echo "📦 Processing namespace: $namespace"
          for deployment in "${DEPLOYMENTS[@]}"; do
            echo "🔄 Command that would be executed: kubectl rollout restart deployment -l app.kubernetes.io/name=\"$deployment\" -n $namespace"
            kubectl rollout restart deployment -l app.kubernetes.io/name="$deployment" -n "$namespace"
            kubectl rollout status deployment -l app.kubernetes.io/name="$deployment" -n "$namespace" --timeout=300s
          done

          echo "✅ Successfully restarted deployment in namespace: $namespace"
          echo ""
        done

        echo "🎉 Deployment restart process completed!"
