name: Build Artifacts for PRs
on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
env:
  REPO_NAME_OLD: rudderlabs/develop-rudder-transformer
  REPO_NAME: rudderstack/develop-rudder-transformer
  DOCKERHUB_USERNAME: rudderlabs

jobs:
  build-transformer-image:
    name: Build Transformer Docker Image - PR
    runs-on: ubuntu-latest

    # Skip for the release pull requests
    if: startsWith(github.event.pull_request.head.ref, 'release/') != true && startsWith(github.event.pull_request.head.ref, 'hotfix-release/') != true
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Generate Image Version
        id: gen_img_version
        shell: bash
        run: |
          echo "version=$(echo ${{ github.head_ref }} | tr "/" .)" >> $GITHUB_OUTPUT

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PROD_TOKEN }}

      - name: Build Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile
          load: true
          tags: |
            ${{ env.REPO_NAME }}:${{ steps.gen_img_version.outputs.version }}

      - name: Run Tests
        run: |
          docker run ${{ env.REPO_NAME }}:${{ steps.gen_img_version.outputs.version }} npm run test:ci

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and Push Multi-platform Images
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile
          push: true
          tags: |
            ${{ env.REPO_NAME_OLD }}:${{ steps.gen_img_version.outputs.version }}
            ${{ env.REPO_NAME }}:${{ steps.gen_img_version.outputs.version }}
          platforms: |
            linux/amd64
            linux/arm64
          build-args: |
            VERSION=${{ steps.gen_img_version.outputs.version }}
            COMMIT_HASH=${{ github.sha }}
  
  build-user-transformer-image:
    name: Build User Transformer Docker Image - PR
    runs-on: ubuntu-latest

    # Skip for the release pull requests
    if: startsWith(github.event.pull_request.head.ref, 'release/') != true && startsWith(github.event.pull_request.head.ref, 'hotfix-release/') != true
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Generate Image Version
        id: gen_img_version
        shell: bash
        run: |
          echo "version=ut-$(echo ${{ github.head_ref }} | tr "/" .)" >> $GITHUB_OUTPUT

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PROD_TOKEN }}

      - name: Build Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile-ut-func
          load: true
          tags: |
            ${{ env.REPO_NAME }}:${{ steps.gen_img_version.outputs.version }}

      - name: Run Tests
        run: |
          docker run ${{ env.REPO_NAME }}:${{ steps.gen_img_version.outputs.version }} npm run test:ci

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and Push Multi-platform Images
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile-ut-func
          push: true
          tags: |
            ${{ env.REPO_NAME_OLD }}:${{ steps.gen_img_version.outputs.version }}
            ${{ env.REPO_NAME }}:${{ steps.gen_img_version.outputs.version }}
          platforms: |
            linux/amd64
            linux/arm64
          build-args: |
            VERSION=${{ steps.gen_img_version.outputs.version }}
            COMMIT_HASH=${{ github.sha }}
