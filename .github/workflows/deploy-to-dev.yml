name: Build Artifacts for Dev Environment

on:
  push:
    branches:
      - 'develop'

env:
  REPO_NAME_OLD: rudderlabs/develop-rudder-transformer
  REPO_NAME: rudderstack/develop-rudder-transformer
  DOCKERHUB_USERNAME: rudderlabs

jobs:
  build-transformer-image:
    name: Build Transformer Docker Image - Dev
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.gen_img_version.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Generate Image Version
        id: gen_img_version
        run: |
          VERSION="latest"
          echo $VERSION
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PROD_TOKEN }}

      - name: Build Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile
          load: true
          tags: |
            ${{ env.REPO_NAME }}:${{ steps.gen_img_version.outputs.version }}

      - name: Run Tests
        run: |
          docker run ${{ env.REPO_NAME }}:${{ steps.gen_img_version.outputs.version }} npm run test:ci

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and Push Multi-platform Images
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile
          push: true
          tags: |
            ${{ env.REPO_NAME_OLD }}:${{ steps.gen_img_version.outputs.version }}
            ${{ env.REPO_NAME }}:${{ steps.gen_img_version.outputs.version }}
          platforms: |
            linux/amd64
            linux/arm64
          build-args: |
            VERSION=${{ steps.gen_img_version.outputs.version }}
            COMMIT_HASH=${{ github.sha }}

  build-user-transformer-image:
    name: Build User Transformer Docker Image - Dev
    runs-on: ubuntu-latest
    outputs:
      ut-version: ${{ steps.gen_img_version.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Generate Image Version
        id: gen_img_version
        run: |
          VERSION="ut-latest"
          echo $VERSION
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PROD_TOKEN }}

      - name: Build Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile-ut-func
          load: true
          tags: |
            ${{ env.REPO_NAME }}:${{ steps.gen_img_version.outputs.version }}

      - name: Run Tests
        run: |
          docker run ${{ env.REPO_NAME }}:${{ steps.gen_img_version.outputs.version }} npm run test:ci

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and Push Multi-platform Images
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile-ut-func
          push: true
          tags: |
            ${{ env.REPO_NAME_OLD }}:${{ steps.gen_img_version.outputs.version }}
            ${{ env.REPO_NAME }}:${{ steps.gen_img_version.outputs.version }}
          platforms: |
            linux/amd64
            linux/arm64
          build-args: |
            VERSION=${{ steps.gen_img_version.outputs.version }}
            COMMIT_HASH=${{ github.sha }}

