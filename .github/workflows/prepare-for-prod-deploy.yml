name: Prepare for Production Environment Deployment

on:
  pull_request:
    types:
      - closed
    branches:
      - main

env:
  REPO_NAME_OLD: rudderlabs/rudder-transformer
  REPO_NAME: rudderstack/rudder-transformer
  DOCKERHUB_USERNAME: rudderlabs

jobs:
  build-transformer-image:
    name: Build Transformer Docker Image - Prod
    runs-on: ubuntu-latest
    # Only merged pull requests from release candidate branches must trigger
    if: ((startsWith(github.event.pull_request.head.ref, 'release/') || startsWith(github.event.pull_request.head.ref, 'hotfix-release/')) && github.event.pull_request.merged == true)
    outputs:
      tag_name: ${{ steps.gen_tag_name.outputs.tag_name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3.4.0
        with:
          fetch-depth: 1

      - name: Generate Tag Name
        id: gen_tag_name
        run: |
          tag_name=$(jq -r .version package.json)
          echo $tag_name
          echo "tag_name=$tag_name" >> $GITHUB_OUTPUT

      - name: Login to DockerHub
        uses: docker/login-action@v2.1.0
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PROD_TOKEN }}

      - name: Build Docker Image
        uses: docker/build-push-action@v4.0.0
        with:
          context: .
          file: Dockerfile
          load: true
          tags: |
            ${{ env.REPO_NAME }}:${{ steps.gen_tag_name.outputs.tag_name }}

      - name: Run Tests
        run: |
          docker run ${{ env.REPO_NAME }}:${{ steps.gen_tag_name.outputs.tag_name }} npm run test:ci

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2.5.0
        with:
          platforms: |
            linux/amd64
            linux/arm64

      - name: Build and Push Multi-platform Images
        uses: docker/build-push-action@v4.0.0
        with:
          context: .
          file: Dockerfile
          push: true
          tags: |
            ${{ env.REPO_NAME_OLD }}:${{ steps.gen_tag_name.outputs.tag_name }}
            ${{ env.REPO_NAME }}:${{ steps.gen_tag_name.outputs.tag_name }}
            ${{ env.REPO_NAME_OLD }}:latest
            ${{ env.REPO_NAME }}:latest
          platforms: |
            linux/amd64
            linux/arm64
          build-args: |
            VERSION=${{ steps.gen_tag_name.outputs.tag_name }}
            COMMIT_HASH=${{ github.sha }}

  build-user-transformer-image:
    name: Build User Transformer Docker Image - Prod
    runs-on: ubuntu-latest
    # Only merged pull requests from release candidate branches must trigger
    if: ((startsWith(github.event.pull_request.head.ref, 'release/') || startsWith(github.event.pull_request.head.ref, 'hotfix-release/')) && github.event.pull_request.merged == true)
    outputs:
      tag_name: ${{ steps.gen_tag_name.outputs.tag_name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3.4.0
        with:
          fetch-depth: 1

      - name: Generate Tag Name
        id: gen_tag_name
        run: |
          tag_name="ut-$(jq -r .version package.json)"
          echo $tag_name
          echo "tag_name=$tag_name" >> $GITHUB_OUTPUT

      - name: Login to DockerHub
        uses: docker/login-action@v2.1.0
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PROD_TOKEN }}

      - name: Build Docker Image
        uses: docker/build-push-action@v4.0.0
        with:
          context: .
          file: Dockerfile-ut-func
          load: true
          tags: |
            ${{ env.REPO_NAME }}:${{ steps.gen_tag_name.outputs.tag_name }}

      - name: Run Tests
        run: |
          docker run ${{ env.REPO_NAME }}:${{ steps.gen_tag_name.outputs.tag_name }} npm run test:ci

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2.5.0
        with:
          platforms: |
            linux/amd64
            linux/arm64

      - name: Build and Push Multi-platform Images
        uses: docker/build-push-action@v4.0.0
        with:
          context: .
          file: Dockerfile-ut-func
          push: true
          tags: |
            ${{ env.REPO_NAME_OLD }}:${{ steps.gen_tag_name.outputs.tag_name }}
            ${{ env.REPO_NAME }}:${{ steps.gen_tag_name.outputs.tag_name }}
            ${{ env.REPO_NAME_OLD }}:ut-latest
            ${{ env.REPO_NAME }}:ut-latest
          platforms: |
            linux/amd64
            linux/arm64
          build-args: |
            VERSION=${{ steps.gen_tag_name.outputs.tag_name }}
            COMMIT_HASH=${{ github.sha }}

  create-pull-request:
    name: Update Helm Charts For Production and Create Pull Request
    runs-on: ubuntu-latest
    needs: [ build-transformer-image, build-user-transformer-image ]
    env:
      TAG_NAME: ${{ needs.build-transformer-image.outputs.tag_name }}
      UT_TAG_NAME: ${{ needs.build-user-transformer-image.outputs.tag_name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3.4.0
        with:
          fetch-depth: 1

      # In order to make a commit, we need to initialize a user.
      # You may choose to write something less generic here if you want, it doesn't matter functionality wise.
      - name: Initialize Mandatory Git Config
        run: |
          git config user.name "GitHub Actions"
          git config user.email "noreply@github.com"

      - name: Print Docker Image Tags
        run: |
          echo "Transformer: $TAG_NAME"
          echo "User Transformer: $UT_TAG_NAME"

      - name: Update Helm Charts and Raise Pull Request
        run: |
          git clone https://${{secrets.PAT}}@github.com/rudderlabs/rudder-devops.git
          cd rudder-devops
          git checkout -b shared-transformer-$TAG_NAME

          cd helm-charts/shared-services/per-az
          yq eval -i ".rudder-transformer.image.tag=\"$TAG_NAME\"" values.blue-release.yaml
          yq eval -i ".user-transformer.image.tag=\"$TAG_NAME\"" values.blue-release.yaml
          git add values.blue-release.yaml

          yq eval -i ".rudder-transformer.image.tag=\"$TAG_NAME\"" values.enterprise.yaml
          yq eval -i ".user-transformer.image.tag=\"$TAG_NAME\"" values.enterprise.yaml
          git add values.enterprise.yaml

          yq eval -i ".rudder-transformer.image.tag=\"$TAG_NAME\"" values.multi-tenant.yaml
          yq eval -i ".user-transformer.image.tag=\"$TAG_NAME\"" values.enterprise.yaml
          git add values.enterprise.yaml

          cd ../../config-be-rudder-transformer
          yq eval -i ".config-be-rudder-transformer.image.tag=\"$TAG_NAME\"" values.prod.yaml
          yq eval -i ".config-be-user-transformer.image.tag=\"$TAG_NAME\"" values.prod.yaml
          git add values.prod.yaml

          git commit -m "chore: upgrade shared transformers to $TAG_NAME"
          git push -u origin shared-transformer-$TAG_NAME

          hub pull-request -m "chore: upgrade shared transformers to $TAG_NAME"

