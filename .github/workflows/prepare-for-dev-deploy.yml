name: Prepare for Dev Environment Deployment

on:
  push:
    branches:
      - develop
  pull_request:
    types:
      - closed
    branches:
      - develop

env:
  REPO_NAME_OLD: rudderlabs/develop-rudder-transformer
  REPO_NAME: rudderstack/develop-rudder-transformer
  DOCKERHUB_USERNAME: rudderlabs

jobs:
  report-coverage:
    name: Report Code Coverage
    if: github.event_name == 'push'
    uses: ./.github/workflows/report-code-coverage.yml

  build-transformer-image:
    name: Build Transformer Docker Image - Dev
    runs-on: ubuntu-latest
    # Only merged pull requests must trigger
    if: github.event.pull_request.merged == true
    outputs:
      tag_name: ${{ steps.gen_tag_name.outputs.tag_name }}
    steps:
      - name: Generate Tag Name
        id: gen_tag_name
        run: |
          tag_name="latest"
          echo "tag_name=$tag_name" >> $GITHUB_OUTPUT

      - name: Checkout
        uses: actions/checkout@v3.5.0
        with:
          fetch-depth: 1

      - name: Login to DockerHub
        uses: docker/login-action@v2.1.0
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PROD_TOKEN }}

      - name: Build Docker Image
        uses: docker/build-push-action@v4.0.0
        with:
          context: .
          file: Dockerfile
          target: development
          load: true
          tags: |
            ${{ env.REPO_NAME }}:${{ steps.gen_tag_name.outputs.tag_name }}

      - name: Run Tests
        run: |
          docker run ${{ env.REPO_NAME }}:${{ steps.gen_tag_name.outputs.tag_name }} npm run test:ci
          docker run ${{ env.REPO_NAME }}:${{ steps.gen_tag_name.outputs.tag_name }} npm run test:integration

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2.5.0
        with:
          platforms: |
            linux/amd64
            linux/arm64

      - name: Build and Push Multi-platform Images
        uses: docker/build-push-action@v4.0.0
        with:
          context: .
          file: Dockerfile
          push: true
          tags: |
            ${{ env.REPO_NAME_OLD }}:${{ steps.gen_tag_name.outputs.tag_name }}
            ${{ env.REPO_NAME }}:${{ steps.gen_tag_name.outputs.tag_name }}
          platforms: |
            linux/amd64
            linux/arm64
          build-args: |
            version=${{ steps.gen_tag_name.outputs.tag_name }}
            GIT_COMMIT_SHA=${{ github.sha }}

  build-user-transformer-image:
    name: Build User Transformer Docker Image - Dev
    runs-on: ubuntu-latest
    # Only merged pull requests must trigger
    if: github.event.pull_request.merged == true
    outputs:
      tag_name: ${{ steps.gen_tag_name.outputs.tag_name }}
    steps:
      - name: Generate Tag Name
        id: gen_tag_name
        run: |
          tag_name="ut-latest"
          echo "tag_name=$tag_name" >> $GITHUB_OUTPUT

      - name: Checkout
        uses: actions/checkout@v3.5.0
        with:
          fetch-depth: 1

      - name: Login to DockerHub
        uses: docker/login-action@v2.1.0
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PROD_TOKEN }}

      - name: Build Docker Image
        uses: docker/build-push-action@v4.0.0
        with:
          context: .
          file: Dockerfile-ut-func
          target: development
          load: true
          tags: |
            ${{ env.REPO_NAME }}:${{ steps.gen_tag_name.outputs.tag_name }}

      - name: Run Tests
        run: |
          docker run ${{ env.REPO_NAME }}:${{ steps.gen_tag_name.outputs.tag_name }} npm run test:ci

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2.5.0
        with:
          platforms: |
            linux/amd64
            linux/arm64

      - name: Build and Push Multi-platform Images
        uses: docker/build-push-action@v4.0.0
        with:
          context: .
          file: Dockerfile-ut-func
          target: development
          push: true
          tags: |
            ${{ env.REPO_NAME_OLD }}:${{ steps.gen_tag_name.outputs.tag_name }}
            ${{ env.REPO_NAME }}:${{ steps.gen_tag_name.outputs.tag_name }}
          platforms: |
            linux/amd64
            linux/arm64
          build-args: |
            version=${{ steps.gen_tag_name.outputs.tag_name }}
            GIT_COMMIT_SHA=${{ github.sha }}

