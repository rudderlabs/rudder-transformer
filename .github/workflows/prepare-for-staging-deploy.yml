name: Prepare for Staging Environment Deployment

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
    branches:
      - main

env:
  REPO_NAME_OLD: rudderlabs/rudder-transformer
  REPO_NAME: rudderstack/rudder-transformer
  DOCKERHUB_USERNAME: rudderlabs

jobs:
  build-transformer-image:
    name: Build Transformer Docker Image - Staging
    runs-on: ubuntu-latest
    outputs:
      tag_name: ${{ steps.gen_tag_name.outputs.tag_name }}

    # Only pull requests from release candidate branches must trigger
    if: (startsWith(github.event.pull_request.head.ref, 'release/') || startsWith(github.event.pull_request.head.ref, 'hotfix-release/'))
    steps:
      - name: Checkout
        uses: actions/checkout@v3.5.0
        with:
          fetch-depth: 1

      - name: Generate Tag Name
        id: gen_tag_name
        run: |
          tag_name="staging-$(jq -r .version package.json)"
          echo $tag_name
          echo "tag_name=$tag_name" >> $GITHUB_OUTPUT

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2.5.0

      - name: Login to DockerHub
        uses: docker/login-action@v2.1.0
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PROD_TOKEN }}

      - name: Cache Docker Layers
        uses: actions/cache@v3.3.1
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build Docker Image
        uses: docker/build-push-action@v4.0.0
        with:
          context: .
          file: Dockerfile
          target: development
          load: true
          tags: |
            ${{ env.REPO_NAME }}:${{ steps.gen_tag_name.outputs.tag_name }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

      - name: Run Tests
        run: |
          docker run ${{ env.REPO_NAME }}:${{ steps.gen_tag_name.outputs.tag_name }} npm run test:ci
          docker run ${{ env.REPO_NAME }}:${{ steps.gen_tag_name.outputs.tag_name }} npm run test:integration

      - name: Build and Push Multi-platform Images
        uses: docker/build-push-action@v4.0.0
        with:
          context: .
          file: Dockerfile
          target: production
          push: true
          tags: |
            ${{ env.REPO_NAME_OLD }}:${{ steps.gen_tag_name.outputs.tag_name }}
            ${{ env.REPO_NAME }}:${{ steps.gen_tag_name.outputs.tag_name }}
          platforms: |
            linux/amd64
            linux/arm64
          build-args: |
            version=${{ steps.gen_tag_name.outputs.tag_name }}
            GIT_COMMIT_SHA=${{ github.sha }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

        # Temp fix
        # https://github.com/docker/build-push-action/issues/252
        # https://github.com/moby/buildkit/issues/1896
      - name: Move Cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  build-user-transformer-image:
    name: Build User Transformer Docker Image - Staging
    runs-on: ubuntu-latest
    outputs:
      tag_name: ${{ steps.gen_tag_name.outputs.tag_name }}

    # Only pull requests from release candidate branches must trigger
    if: (startsWith(github.event.pull_request.head.ref, 'release/') || startsWith(github.event.pull_request.head.ref, 'hotfix-release/'))
    steps:
      - name: Checkout
        uses: actions/checkout@v3.5.0
        with:
          fetch-depth: 1

      - name: Generate Tag Name
        id: gen_tag_name
        run: |
          tag_name="ut-staging-$(jq -r .version package.json)"
          echo $tag_name
          echo "tag_name=$tag_name" >> $GITHUB_OUTPUT

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2.5.0

      - name: Login to DockerHub
        uses: docker/login-action@v2.1.0
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PROD_TOKEN }}

      - name: Cache Docker Layers
        uses: actions/cache@v3.3.1
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build Docker Image
        uses: docker/build-push-action@v4.0.0
        with:
          context: .
          file: Dockerfile-ut-func
          target: development
          load: true
          tags: |
            ${{ env.REPO_NAME }}:${{ steps.gen_tag_name.outputs.tag_name }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

      - name: Run Tests
        run: |
          docker run ${{ env.REPO_NAME }}:${{ steps.gen_tag_name.outputs.tag_name }} npm run test:ci

      - name: Build and Push Multi-platform Images
        uses: docker/build-push-action@v4.0.0
        with:
          context: .
          file: Dockerfile-ut-func
          target: development
          push: true
          tags: |
            ${{ env.REPO_NAME_OLD }}:${{ steps.gen_tag_name.outputs.tag_name }}
            ${{ env.REPO_NAME }}:${{ steps.gen_tag_name.outputs.tag_name }}
          platforms: |
            linux/amd64
            linux/arm64
          build-args: |
            version=${{ steps.gen_tag_name.outputs.tag_name }}
            GIT_COMMIT_SHA=${{ github.sha }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

        # Temp fix
        # https://github.com/docker/build-push-action/issues/252
        # https://github.com/moby/buildkit/issues/1896
      - name: Move Cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  create-pull-request:
    name: Update Helm Charts For Staging and Create Pull Request
    runs-on: ubuntu-latest
    needs: [ build-transformer-image, build-user-transformer-image ]
    env:
      TAG_NAME: ${{ needs.build-transformer-image.outputs.tag_name }}
      UT_TAG_NAME: ${{ needs.build-user-transformer-image.outputs.tag_name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3.5.0
        with:
          fetch-depth: 1

      # In order to make a commit, we need to initialize a user.
      # You may choose to write something less generic here if you want, it doesn't matter functionality wise.
      - name: Initialize Mandatory Git Config
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "noreply@github.com"

      - name: Print Docker Image Tags
        run: |
          echo "Transformer: $TAG_NAME"
          echo "User Transformer: $UT_TAG_NAME"

      - name: Update Helm Charts and Raise Pull Request
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
        run: |
          git clone https://${{secrets.PAT}}@github.com/rudderlabs/rudder-devops.git
          cd rudder-devops
          BRANCH_NAME="shared-transformer-$TAG_NAME"
          echo $BRANCH_NAME
          if [ `git ls-remote --heads origin $BRANCH_NAME 2>/dev/null` ]
          then
            echo "Staging deployment branch already exists!"
          else
            git checkout -b $BRANCH_NAME

            cd helm-charts/shared-services/per-az
            yq eval -i ".rudder-transformer.image.tag=\"$TAG_NAME\"" values.staging.yaml
            yq eval -i ".user-transformer.image.tag=\"$TAG_NAME\"" values.staging.yaml
            git add values.staging.yaml

            cd ../../config-be-rudder-transformer
            yq eval -i ".config-be-rudder-transformer.image.tag=\"$TAG_NAME\"" values.staging.yaml
            yq eval -i ".config-be-user-transformer.image.tag=\"$TAG_NAME\"" values.staging.yaml
            git add values.staging.yaml

            git commit -m "chore: upgrade staging env transformers to \"$TAG_NAME\""
            git push -u origin $BRANCH_NAME
            hub pull-request -m "chore: upgrade staging env transformers to \"$TAG_NAME\""
          fi




