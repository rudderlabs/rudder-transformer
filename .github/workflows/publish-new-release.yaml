name: Publish New Release

on:
  pull_request:
    types:
      - closed
    branches:
      - main

jobs:
  release:
    name: Publish New Release
    runs-on: ubuntu-latest

    if: (startsWith(github.event.pull_request.head.ref, 'release/') || startsWith(github.event.pull_request.head.ref, 'hotfix-release/')) && github.event.pull_request.merged == true # only merged pull requests must trigger this job

    steps:
      - name: Extract Version
        id: extract-version
        run: |
          BRANCH_NAME="${{ github.event.pull_request.head.ref }}"
          VERSION=${BRANCH_NAME#hotfix-}
          VERSION=${VERSION#release/}

          echo "release_version=$VERSION" >> $GITHUB_OUTPUT

      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      # In order to make a commit, we need to initialize a user.
      - name: Initialize Mandatory Git Config
        run: |
          git config user.name "GitHub Actions"
          git config user.email noreply@github.com

      - name: Tag & Create GitHub Release
        id: create_release
        env:
          HUSKY: 0
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CONVENTIONAL_GITHUB_RELEASER_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git tag -a ${{ steps.extract-version.outputs.release_version }} -m "chore: release v${{ steps.extract-version.outputs.release_version }}"
          git push origin refs/tags/${{ steps.extract-version.outputs.release_version }}
          npm run release
          echo "DATE=$(date)" >> $GITHUB_ENV

      - name: Pull Changes Into develop Branch
        uses: repo-sync/pull-request@v2
        with:
          source_branch: 'main'
          destination_branch: 'develop'
          github_token: ${{ secrets.GITHUB_TOKEN }}
          pr_title: 'chore(release): pull main into develop post release v${{ steps.extract-version.outputs.release_version }}'
          pr_body: ':crown: *An automated PR*'

      - name: Delete Hotfix Release Branch
        uses: koj-co/delete-merged-action@master
        if: startsWith(github.event.pull_request.head.ref, 'hotfix-release/')
        with:
          branches: 'hotfix-release/*'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Delete Release Branch
        uses: koj-co/delete-merged-action@master
        if: startsWith(github.event.pull_request.head.ref, 'release/')
        with:
          branches: 'release/*'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

