bindings:
  - path: ../../../../v0/destinations/pinterest_tag/config
steps:
  - name: validateInput
    template: |
      $.assert(Array.isArray(^) && ^.length > 0, "Invalid event array")

  - name: transform
    externalWorkflow:
      path: ./procWorkflow.yaml
      bindings:
        - name: batchMode
          value: true
    loopOverInput: true
  - name: successfulEvents
    template: |
      $.outputs.transform#idx.output.({
        "output": .,
        "destination": ^[idx].destination,
        "metadata": ^[idx].metadata
      })[]
  - name: failedEvents
    template: |
      $.outputs.transform#idx.error.({
        "metadata": ^[idx].metadata[],
        "batched": false,
        "statusCode": .status,
        "error": .message
      })[]
  - name: batchSuccessfulEvents
    description: Batches the successfulEvents
    template: |
        let batches = $.chunk($.outputs.successfulEvents, $.MAX_BATCH_SIZE);
        batches@batch.({
          "batchedRequest": {
            "body": {
              "JSON": {"data": ~r batch.output[]},
              "JSON_ARRAY": {},
              "XML": {},
              "FORM": {}
            },
            "version": "1",
            "type": "REST",
            "method": "POST",
            "endpoint": $.ENDPOINT,
            "headers": {
              "Content-Type": "application/json"
            },
            "params": {},
            "files": {}
          },
          "metadata": ~r batch.metadata[],
          "batched": true,
          "statusCode": 200,
          "destination": batch[0].destination
        })[];
  - name: finalPayload
    template: |
      [...$.outputs.batchSuccessfulEvents, ...$.outputs.failedEvents]